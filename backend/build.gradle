plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.mynt'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    resilience4jVersion = '2.2.0'
    lombokVersion = '1.18.24'
    jjwtVersion = '0.12.6'
    nimbusJoseJwtVersion = '9.37.2'
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Resilience4j
    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"
    implementation 'io.github.resilience4j:resilience4j-spring6:2.2.0'

    // Resilience4j core modules
    implementation "io.github.resilience4j:resilience4j-bulkhead:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
    implementation 'io.micrometer:micrometer-registry-prometheus'
    // Resilience4j Micrometer integration
    implementation "io.github.resilience4j:resilience4j-micrometer:${resilience4jVersion}"

    // Spring Boot Starter Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // OpenAPI/Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // Database
    runtimeOnly 'org.postgresql:postgresql:42.7.3'

    // JSON Web Tokens (JWT)
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // Retrofit for HTTP requests
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Gson for JSON parsing
    implementation 'com.google.code.gson:gson:2.8.9'

    // Jackson for JSON binding
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Reactor for Reactive Programming
    implementation 'io.projectreactor:reactor-core'

    // UUID Generator
    implementation 'com.fasterxml.uuid:java-uuid-generator:4.0.1'

    // Nimbus JOSE+JWT library for JWTs
    implementation "com.nimbusds:nimbus-jose-jwt:${nimbusJoseJwtVersion}"

    // Jakarta WS
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:4.0.0'

    // Lombok for reducing boilerplate code
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Annotation Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

tasks.named('test') {
    useJUnitPlatform()
}
